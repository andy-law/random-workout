{"version":3,"sources":["utils/workouts.js","utils/equipment.js","App.js","serviceWorker.js","index.js"],"names":["workouts","push","title","instructions","image","link","equipment","pull","hinge","squat","carry","lunge","plank","label","value","App","allEquipment","useState","map","e","availableEquipment","setAvailableEquipment","exercises","setExercises","className","CheckboxGroup","inline","name","onChange","Checkbox","key","length","workout","Panel","header","collapsible","bordered","item","find","join","Button","onClick","Object","keys","availableWorkouts","filter","type","includes","index","Math","floor","random","substring","toUpperCase","getWorkouts","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9951f01.chunk.js","sourcesContent":["const workouts = {\n  push: [\n    {title: 'Push ups', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Balance board push ups', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: ['balance-board']},\n    {title: 'Side-to-side Moving push ups', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Pike push up', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Dumbell overhead press', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: ['dumbells']},\n  ],\n  pull: [\n    {title: 'Dumbell rows', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: ['dumbells']},\n    {title: 'Pull ups', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: ['pull-up-bar']},\n    {title: 'Dumbell curls', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: ['dumbells']},\n  ],\n  hinge: [\n    {title: 'Romanian deadlift', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: ['dumbells', 'barbells']},\n    {title: 'Single leg dumbell deadlift', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: ['dumbells']},\n  ],\n  squat: [\n    {title: 'Goblet squat', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: ['kettle-bells', 'dumbells', 'medecine-ball']},\n    {title: 'Jump squat', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Side to side lunge', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: '1 legged squats', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Lumberjack squats', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Squat to knee raise', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n  ],\n  carry: [\n    {title: 'Farmers carry', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: ['kettle-bells', 'dumbells']},\n  ],\n  lunge: [\n    {title: 'Reverse lunge', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Walking lunge', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Lunge to knee drive', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Lateral jumps', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n  ],\n  plank: [\n    {title: 'Forearm plank', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Standard plank (high plank)', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Press up to elbows', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n    {title: 'Side plank', instructions: 'Lorem ipsum set dolor', image: '', link: '', equipment: []},\n  ],\n};\n\nexport const getWorkouts = (availableEquipment) => {\n  return Object.keys(workouts)\n    .map((key) => {\n      const workoutList = workouts[key];\n      const availableWorkouts = workoutList\n        .filter(({equipment}) => equipment.length === 0 || equipment.filter((type) => availableEquipment.includes(type)).length)\n      \n      const index = Math.floor(Math.random() * availableWorkouts.length);\n\n      return {\n        title: `${key.substring(0, 1).toUpperCase()}${key.substring(1)}`,\n        workout: availableWorkouts[index],\n      };\n    });\n};","const equipment = [\n  {\n    label: 'Balance Board',\n    value: 'balance-board'\n  },\n  {\n    label: 'Kettle Bells',\n    value: 'kettle-bells'\n  },\n  {\n    label: 'Pull up bar',\n    value: 'pull-up-bar'\n  },\n  {\n    label: 'Dumbells',\n    value: 'dumbells'\n  },\n  {\n    label: 'Slant board',\n    value: 'slant-board'\n  },\n  {\n    label: 'Barbells',\n    value: 'barbells'\n  },\n  {\n    label: 'Medecine Ball',\n    value: 'medecine-ball'\n  }\n];\n\nexport const getEquipment = () => equipment;","import React, { useState } from 'react';\nimport {Panel, Button, Checkbox, CheckboxGroup} from 'rsuite';\n\nimport { getWorkouts } from './utils/workouts';\nimport { getEquipment } from './utils/equipment';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './App.css';\n\nfunction App() {\n  const allEquipment = getEquipment();\n  const [availableEquipment, setAvailableEquipment] = useState(allEquipment.map(e => e.value));\n  const [exercises, setExercises] = useState([]);\n  \n\n  const generateWorkout = () => {\n    const workouts = getWorkouts(availableEquipment);\n\n    console.log({workouts});\n    setExercises(workouts);\n  }\n\n  const handleChange = (value) => {\n    setAvailableEquipment(value);\n  }\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Random strength routine creator</h1>\n      </header>\n      <div className=\"App-body\">\n        <div className=\"App-equipment\">\n          <CheckboxGroup\n            inline\n            name=\"checkboxList\"\n            value={availableEquipment}\n            onChange={handleChange}\n          >\n            {\n              allEquipment.map(({label, value}) => (\n                <Checkbox key={value} value={value}>{label}</Checkbox>\n              ))\n            }\n          </CheckboxGroup>\n        </div>\n        {\n          !!exercises && !!exercises.length &&\n          <>\n            {\n              exercises.map(({title, workout}) => (\n                <Panel key={title} header={`${title} - ${workout.title}`} collapsible bordered>\n                  <p>{workout.instructions}</p>\n                  <p>Equipment needed: {\n                    workout.equipment.length \n                      ? workout.equipment.map((item) => allEquipment.find(({value}) => value === item).label).join(', ')\n                      : 'None'\n                  }</p>\n                </Panel>\n              ))\n            }\n          </>\n        }\n      </div>\n      <footer className=\"App-footer\">\n        <Button onClick={generateWorkout}>Generate workout</Button> \n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}